name: CI-CD

# 어떤 브랜치에 push시 github action CI를 동작시킬지
on:
  push:
    branches:
#      - dev
      - release/1.0.0
# 환경 변수 설정
# 생성한 Code Deploy와 S3의 이름을 설정한다.
env:
	CONTEXT: dev
  S3_BUCKET_NAME: cicd-joo-terraform
  RESOURCE_PATH: ./module-api/src/main/resources/application.yml
  CODE_DEPLOY_APPLICATION_NAME: joo-deploy-cicd
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: joo-deploy-group
# push 시 수행할 일들 정의
jobs:
  build:
# 실행 환경 이미지
    runs-on: ubuntu-latest
# 각 실행 스텝을 정의해준다.
# name은 실행 스텝의 이름으로 출력된다.
# uses는 github action의 특정한 action을 실행시키는 것이다.
# run은 커맨드를 실행시킨다.
# with는 uses에서 사용할 변수를 지정해준다.
# GitHub Actions 입장에서 바라보면 GitHub의 코드 저장소에 올려둔 코드를 
# CI 서버로 내려받은 후에 특정 브랜치로 전환하는 행위
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with: 
          java-version: 11

# github action에 secret으로 application.yml을 올려두고 빌드시 활용할 수 있도록 복사해준다.
      - run: mkdir ./module-api/src/main/resources
      - run: touch ./module-api/src/main/resources/application.yml
      - run: echo "${{ secrets.APPLICATION_DEV }}" > ./module-api/src/main/resources/application.yml
      - run: cat ./module-api/src/main/resources/application.yml

      - name: Grant execute permission for gradlew
        run: chmod +x ./module-api/gradlew
        shell: bash
# jar파일을 빌드한다.
      - name: Build with Gradle
        run: ./module-api/gradlew build -x test -Pprofile=${{ env.CONTEXT }}
        shell: bash
        
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA .
        shell: bash

# AWS 계정의 key값을 입력하여 aws 커맨드를 사용할 수 있게 설정한다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{  secrets.AWS_REGION }}
     
# S3에 빌드된 파일을 전송해준다.
      - name: Upload to S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip
# Code deploy에게 S3에 저장된 빌드파일을 배포하도록 명령 내린다.
      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
